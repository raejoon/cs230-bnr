import numpy as np

def load_asts_from_dataset(ast_dirpath):
    pass

def load_asts_from_file(ast_filepath):
    """ Load asts from file.
    Note that npy file generated by Ben's code has the following shape.
    (num_timesteps, num_blocks, num_asts)
    
    Returns:
    all_matrix (np.array): (num_asts, num_timesteps, num_blocks) data set
    """
    orig_mat = np.load(ast_filepath)
    orig_mat = np.swapaxes(orig_mat, 0, 1)
    orig_mat = np.swapaxes(orig_mat, 0, 2)
    return orig_mat

def save_asts_to_file(X, ast_filepath):
    X = np.swapaxes(X, 0, 2)
    X = np.swapaxes(X, 0, 1)  
    np.save(ast_filepath, X)

def get_output_labels(X):
    num_asts = X.shape[0]
    num_timesteps = X.shape[1]

    Y = np.zeros(X.shape)
    for t in range(num_timesteps - 1):
        Y[:,t,:] = X[:,t+1,:]

    Y[:,num_timesteps-1,-1] = np.ones(num_asts)
    return Y 

def create_model(X):
    pass

def fit_model(model, X, Y):
    pass

def get_embeddings(model, X):
    pass

def save_embeddings(embed_dict, filepath):
    pass

def load_embeddings(filepath):
    pass

